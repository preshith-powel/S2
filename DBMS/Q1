CREATE DATABASE UNIVERSITY;
USE UNIVERSITY;

CREATE TABLE STUDENT(
NAME VARCHAR(50)NOT NULL,
STUDENT_NUMBER INT(2) PRIMARY KEY,
CLASS INT(2) ,
MAJOR VARCHAR(50));

CREATE TABLE COURSE(
COURSE_NAME VARCHAR(50) NOT NULL,
COURSE_NUMBER VARCHAR(20) PRIMARY KEY,
CREDIT_HOURS INT(2),
DEPARTMENT VARCHAR(30));

CREATE TABLE SECTION(
SECTION_IDENTIFIER INT(3) PRIMARY KEY,
COURSE_NUMBER VARCHAR(20),
SEMESTER VARCHAR(30),
YEAR CHAR(2),
INSTRUCTOR VARCHAR(50),
FOREIGN KEY (COURSE_NUMBER) REFERENCES COURSE(COURSE_NUMBER));

CREATE TABLE GRADE_REPORT(
STUDENT_NUMBER INT(2),
SECTION_IDENTIFIER INT(3),
GRADE VARCHAR(2),
FOREIGN KEY (STUDENT_NUMBER) REFERENCES STUDENT(STUDENT_NUMBER),
FOREIGN KEY (SECTION_IDENTIFIER) REFERENCES SECTION(SECTION_IDENTIFIER),
PRIMARY KEY(STUDENT_NUMBER,SECTION_IDENTIFIER));

CREATE TABLE PREREQUISITE(
COURSE_NUMBER VARCHAR(20),
PREREQUISITE_NUMBER VARCHAR (20) PRIMARY KEY,
FOREIGN KEY (COURSE_NUMBER) REFERENCES COURSE(COURSE_NUMBER));

INSERT INTO STUDENT VALUES 
("SMITH",17,1,"CS"),
("BROWN",8,2,"CS");

INSERT INTO COURSE VALUES
("INTRO TO CS","CS1310",4,"CS"),
("DATA STRUCTURES","CS3320",4,"CS"),
("DISCRETE MATHS","MATH2410",4,"MATH"),
("DATABASE","CS3380",3,"CS");

INSERT INTO SECTION VALUES
(85,"MATH2410","FALL","07","KING"),
(92,"CS1310","FALL","07","ANDERSON"),
(102,"CS3320","SPRING","08","KNUTH"),
(112,"MATH2410","FALL","08","CHANG"),
(119,"CS1310","FALL","08","ANDERSON"),
(135,"CS3380","FALL","08","STONE");

INSERT INTO GRADE_REPORT VALUES
(17,112,"B"),
(17,119,"C"),
(8,85,"A"),
(8,92,"A"),
(8,102,"B"),
(8,135,"A");

INSERT INTO PREREQUISITE VALUES
("CS3380","CS3320"),
("CS3380","MATH2410"),
("CS3320","CS1310");

-- SELECT ALL COURSES AND GRADES OF SMITH

SELECT
STUDENT.NAME,
COURSE.COURSE_NAME,
GRADE_REPORT.GRADE
FROM STUDENT
INNER JOIN GRADE_REPORT ON
STUDENT.STUDENT_NUMBER = GRADE_REPORT.STUDENT_NUMBER
INNER JOIN SECTION ON
SECTION.SECTION_IDENTIFIER=GRADE_REPORT.SECTION_IDENTIFIER
INNER JOIN COURSE ON
COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER
WHERE STUDENT.NAME ="SMITH";

-- LIST THE NAME OF THE STUDENTS WHO TOOK THE "DATABASE" COURSE OFFERED IN THE FALL 2008 AND THEIR GRADE IN THAT SECTION.

SELECT
STUDENT.NAME AS STUDENT_NAME,
GRADE_REPORT.GRADE AS GRADE
FROM STUDENT
INNER JOIN GRADE_REPORT ON STUDENT.STUDENT_NUMBER=GRADE_REPORT.STUDENT_NUMBER
INNER JOIN SECTION ON SECTION.SECTION_IDENTIFIER = GRADE_REPORT.SECTION_IDENTIFIER
INNER JOIN COURSE ON COURSE.COURSE_NUMBER = SECTION.COURSE_NUMBER
WHERE COURSE.COURSE_NAME="DATABASE" AND SECTION.SEMESTER="FALL" AND SECTION.YEAR="08";

-- LIST THE PREREQUISITES OF THE 'DATABASE' COLUMN

SELECT 
C1.COURSE_NAME AS COURSE_NAME ,
COURSE.COURSE_NAME AS PREREQUISITES
FROM COURSE AS C1
INNER JOIN PREREQUISITE ON C1.COURSE_NUMBER= PREREQUISITE.COURSE_NUMBER
INNER JOIN COURSE ON COURSE.COURSE_NUMBER=PREREQUISITE.PREREQUISITE_NUMBER
WHERE C1.COURSE_NAME="DATABASE";

-- OR IN SUB QUERY METHOD

SELECT COURSE_NAME FROM COURSE WHERE COURSE_NUMBER IN
(SELECT PREREQUISITE_NUMBER FROM PREREQUISITE WHERE COURSE_NUMBER IN
(SELECT COURSE_NUMBER FROM COURSE WHERE COURSE_NAME="DATABASE"));

-- RETRIEVE ALL THE COURSES TAUGHT BY PROFESSOR KING IN 2007 AND 2008 .

SELECT COURSE.COURSE_NAME
FROM COURSE 
INNER JOIN SECTION ON SECTION.COURSE_NUMBER=COURSE.COURSE_NUMBER
WHERE SECTION.INSTRUCTOR="KING" 
AND SECTION.YEAR IN ("07","08");

-- For each section taught by Professor ANDERSON, retrieve the course number, semester, year, and number of students who tool the section.

SELECT 
SECTION.INSTRUCTOR,
SECTION.SECTION_IDENTIFIER,
COURSE.COURSE_NUMBER,
SECTION.SEMESTER,
SECTION.YEAR,
COUNT(STUDENT.STUDENT_NUMBER) AS STUDENT_COUNT
FROM SECTION
INNER JOIN COURSE ON COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER
INNER JOIN STUDENT ON COURSE.DEPARTMENT=STUDENT.MAJOR
GROUP BY SECTION.SECTION_IDENTIFIER
HAVING INSTRUCTOR="ANDERSON";

-- NUMBER OF STUDENTS IN EACH DEPARTMENT

SELECT 
STUDENT.MAJOR,
COUNT(*) FROM STUDENT 
GROUP BY MAJOR;

-- Create a view to retrieve the names of all senior students majoring in ‘CS’ (computer science).

CREATE VIEW SENIOR AS 
SELECT NAME FROM STUDENT 
WHERE MAJOR='CS' AND CLASS=2;
SELECT * FROM SENIOR;

-- Retrieve the name and transcript of each senior student (Class=2) majoring in CS. 
-- A transcript includes course name, course number, credit hours, semester, year and grade for each course completed by the student.

SELECT 
STUDENT.NAME,
COURSE.COURSE_NAME,
COURSE.COURSE_NUMBER,
COURSE.CREDIT_HOURS,
SECTION.SEMESTER,
SECTION.YEAR,
GRADE_REPORT.GRADE
FROM STUDENT 
INNER JOIN GRADE_REPORT ON GRADE_REPORT.STUDENT_NUMBER=STUDENT.STUDENT_NUMBER
INNER JOIN SECTION ON SECTION.SECTION_IDENTIFIER=GRADE_REPORT.SECTION_IDENTIFIER
INNER JOIN COURSE ON COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER
WHERE STUDENT.CLASS=2 AND STUDENT.MAJOR="CS";

-- Insert a new student, < ‘Johnson’,25,1, ‘Math’>, in the database
INSERT INTO STUDENT VALUES
('Johnson',25,1,'Math');

SELECT * FROM STUDENT ;

-- Change the class of student ‘Smith’ to 2. update STUDENT set Class=2 where Name="
UPDATE STUDENT 
SET CLASS=2 
WHERE NAME ="SMITH";

SELECT * FROM STUDENT;

-- Insert a new course, < ‘Knowledge Engineering’, ‘CS4390’, 3, ‘CS’>.
INSERT INTO COURSE VALUES 
("Knowledge Engineering", "CS4390", 3, "CS");
SELECT * FROM COURSE WHERE COURSE_NUMBER="CS4390";

-- Delete the record for the student whose name is ‘Smith’ and whose student number is 17.
DELETE FROM GRADE_REPORT WHERE STUDENT_NUMBER=17;
DELETE FROM STUDENT WHERE NAME="SMITH" OR STUDENT_NUMBER=17;
SELECT * FROM STUDENT;

ALTER TABLE STUDENT RENAME STUDENTS;

ALTER TABLE STUDENTS 
MODIFY COLUMN NAME VARCHAR(30);

ALTER TABLE GRADE_REPORT
ADD MARKS INT(2);
